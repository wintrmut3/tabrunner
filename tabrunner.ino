// Based on ThingPulse ESP8266 SSD1306 OLED Demo
 
// Include the correct display library

// For a connection via I2C using the Arduino Wire include:
#include <Wire.h>               // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306Wire.h"        // legacy: #include "SSD1306.h"
#include "fonts.h"
#include <Vector.h>

#define SONGLEN 3

typedef struct{
  int length;
  int notes [32]; //max size
} Bar;


//copypaste after the zero
int song [][32] = { { 547,866,946,1088,1168,1248,1314, },{ 546,866,946,1088,1168,1248,1312, },{ 546,608,946,1088,1168,1248,1571, },{ 672,706,802,1056,1571, },{ 547,866,946,1088,1168,1248,1314, },{ 546,866,946,1088,1168,1248,1312, },{ 544,866,946,1088,1168,1248,1571, },{ 658,688,738,802,1056,1571, },{ 547,866,946,1088,1168,1248,1314, },{ 546,739,866,946,1088,1168,1312,352, },{ 546,608,946,1088,1168,1248,1571, },{ 688,738,802,1056,1571,480, },{ 547,866,946,1088,1168,1248,1314,290, },{ 546,691,738,1088,1168,1312,288,482, },{ 544,866,946,1088,1168,1248,1571,288, },{ 691,802,1056,1571,480, },{ 866,946,1088,1168,1248,1314,290, },{ 866,946,1088,1168,1312,288,405, },{ 611,946,1088,1168,1248,1571, },{ 691,802,1056,1571, },{ 866,946,1088,1168,1248,1314, },{ 866,946,1088,1248,1312, },{ 547,866,946,1088,1168,1248,1571, },{ 608,658,688,738,802,1056,1571, },{ 547,866,946,1088,1168,1248,1314, },{ 546,739,866,946,1088,1168,1312,352, },{ 546,608,946,1088,1168,1248,1571, },{ 688,738,802,1056,1571, },{ 547,866,946,1088,1168,1248,1314, },{ 546,691,738,1088,1168,1312,400, },{ 544,866,946,1088,1168,1248,1571, },{ 659,690,739,802,1056,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,691,738,866,1088,1312,320,400, },{ 546,608,946,1088,1168,1248,1571, },{ 659,690,739,866,1088,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,611,691,738,1312,400, },{ 544,866,946,1088,1168,1248,1571, },{ 659,690,739,866,1088,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,691,738,866,1088,1312,320,400, },{ 546,608,946,1088,1168,1248,1571, },{ 659,690,739,866,1088,1571,354,403,434,483, },{ 547,659,690,739,866,1088,1314,293,354,403,434,483, },{ 546,611,691,738,1312,293,354,403,434,483, },{ 544,866,946,1088,1168,1248,1571,293,354,405,482, },{ 291,354,403,434,483, },{ 834,1056,293,354,403,434,483, },{ 834,1312,293,327,357,403,434,480, },{ 579,691,1314,288, },{ 1088,1571,354,403,434,483, },{ 834,1056,293,354,403,434,483, },{ 1312,293,327,357,403,434,483, },{ 611,948,1092,1172,1252,1314,293,354,405,482, },{ 1088,1571,291,354,403,434,483, },{ 834,1056,293,354,403,434,483, },{ 1312,293,327,357,403,434,480, },{ 579,691,1314, },{ 1088,1571,354,403,434,480, },{ 834,1056,357,485, },{ 1312, },{ 547,868,948,1092,1172,1252,1314, },{ 1088,1571,354,403,434,480, },{ 583,695,807,919,1056,293,405, },{ 615,664,695,741,839,1312,293,403, },{ 549,611,868,948,1092,1172,1252,1314,291,402, },{ 1088,1571,290,403, },{ 611,739,834,946,1056,282,410, },{ 611,739,834,946,1312,282,394, },{ 611,739,834,946,1314,282,410, },{ 611,739,834,946,1571,282,410, },{ 618,746,823,951,1040,282,410, },{ 616,744,823,951,1296,282,410, },{ 615,743,839,951,1559,282,394, },{ 616,744,839,967,1306,282,394, },{ 618,746,811,955,1040,282,362,442, },{ 616,744,841,953,1296,282,362,442, },{ 615,743,823,935,1559,282,362,442, },{ 616,744,823,951,1306,282,362,442, },{ 567,663,743,1040,282,362,442, },{ 536,616,696,823,903,999,1552,282,362,426, },{ 535,615,695,823,919,999,1559,362, },{ 536,616,696,823,919,999,1306,362, },{ 290,435, },{ 309, },{ 535,615,695,823,919,999,1040,311,448, },{ 533,613,693,823,919,999,1296, },{ 615,871,1120,1376,306,451, },{ 615,871,1120,1376,309, },{ 624,802,1056,1314,359, },{ 642,723,818,1072,1328,359, },{ 306,451, },{ 309, },{ 631,1077,1331,1587,311,448, },{ 563,626,962, },{ 624,818,1072,1330,306,451, },{ 626,707,818,1072,309, },{ 1125,1379,1635, },{ 1125,1379,1635, },{ 624,818,1072,1330, },{ 626,707,818,1072, },{ 631, },{ 1077,1331,1587, },{ 563,626,962, },{ 624,818,1072,1330, },{ 626,707,818,1072,1328, },{ 608,866,1120,1635, },{ 608,866,1120,1635, },{ 611,866,1120,1378, },{ 610,866,1120,1376, },{ 562,624,818,1072,1587, },{ 576,674, },{ 611,866,1120,1378,352, },{ 610,866,1120,1376, },{ 608,866,1120,1635,448, },{ 610,672,722,290, },{ 611,866,1120,1378,288,482, },{ 562,691,818,1072,1328,611,866,1120,1378,288, },{ 546,611,658,720,802,1056,1571,546,659,722,802,1056,480, },{ 576,674,624,882,1136,1651,290, },{ 560,643,818,1072,1587,288,405, },{ 866,946,1088,1168,1248,1314,611,946,1088,1168,1248,1571, },{ 866,946,1088,1168,1312,691,802,1312,1571, },{ 866,946,1088,1168,1248,1314, },{ 866,946,1088,1248,1312, },{ 547,866,946,1088,1168,1248,1571, },{ 608,658,688,738,802,1056,1571, },{ 547,866,946,1088,1168,1248,1314, },{ 546,739,866,946,1088,1168,1312,352, },{ 546,608,946,1088,1168,1248,1571, },{ 688,738,802,1312,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,691,1088,1168,1312,400, },{ 544,866,946,1088,1168,1248,1571, },{ 659,690,739,802,1056,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,691,738,866,1088,1312,320,400, },{ 546,608,946,1088,1168,1248,1571, },{ 659,690,739,866,1088,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,611,691,738,1312,400, },{ 544,866,946,1088,1168,1248,1571, },{ 659,690,739,866,1088,1571, },{ 547,659,690,739,866,1088,1314, },{ 546,691,738,866,1088,1312,320,400, },{ 546,608,946,1088,1168,1248,1315, },{ 659,690,739,866,1088,1571,354,403,434,483, },{ 547,659,690,739,866,1088,1314,293,354,403,434,483, },{ 546,611,691,738,1312,293,354,403,434,483, },{ 544,866,946,1088,1168,1248,1571,293,354,405,482, },{ 802,1056,1571,291,354,403,434,483, },{ 834,1056,293,354,403,434,483, },{ 834,1312,293,327,357,403,434,480, },{ 579,691,1314,288, },{ 1088,1571,354,403,434,483, },{ 834,1056,293,354,403,434,483, },{ 1312,293,327,357,403,434,483, },{ 611,948,1092,1172,1252,1314,293,354,405,482, },{ 1088,1571,293,354,405,482, },{ 834,1056,291,354,403,434,483, },{ 1312,293,354,403,434,483, },{ 579,691,1314,293,327,357,403,434,480, },{ 579,691,1314, },{ 1088,1571,354,403,434,480, },{ 834,1056,357,485, },{ 1312, },{ 547,868,948,1092,1172,1252,1314, },{ 1088,1571,354,403,434,480, },{ 583,695,807,919,1056,293,405, },{ 615,664,695,741,839,1312,293,403,483, },{ 549,611,948,1092,1172,1252,1314,291,402,483, },{ 1088,1571,290,403,483, },{ 611,739,834,946,1056,282,394,490, },{ 611,690,834,1312,282,394, },{ 611,690,834,1314,282,410, },{ 611,834,946,1571,282,410, },{ 602,695,823,1040,282,394, },{ 616,744,823,951,1296,282,410, },{ 615,743,839,951,1559,282,394, },{ 616,744,839,967,1306,282,394, },{ 618,746,827,939,1040,282,362,442, },{ 616,744,841,953,1296,282,362,442, },{ 615,743,823,935,1559,282,362,442, },{ 616,744,823,951,1306,282,362,442, },{ 567,663,743,1040,282,362,442, },{ 536,616,696,823,903,999,1552,282,362,426, },{ 535,615,695,823,919,999,1559,362, },{ 536,616,696,823,919,999,1306,378, },{ 535,615,695,823,919,999,1040,354,403,434,483, },{ 293,354,403,434,483, },{ 533,613,693,823,919,999,1312,293,354,403,434,483, },{ 615,871,1120,1376,341, },{ 631,887,1136,1392,293,338,387,434,483, },{ 293,322,355,402,435, },{ 547,802,1056,277,327,357,403,434,480, },{ 546,802,1056,1312,320, },{ 595,1108,1362,354,387,434,467, },{ 547,1060,1314,293,327,357,403,434,480, },{ 547,802,1056, },{ 530,786,1040,1296,338,387,434,464, },{ 453, },{ 691,946,1092,1346,293, },{ 547,802,1056,1571, },{ 546,802,1056,1312,338,387,434,464, },{ 595,850,1108,1362,277,405, },{ 547,800,1056,1571,277,387, },{ 663,839,1088,615,664,711,741,1312,291,402, },{ 581,707,836,1092,1346,290, },{ 547,800,1056,1571,293,405, },{ 611,739,834,962,1040,293,403,483, },{ 627,739,834,946,1296,611,739,834,946,1314,291,402, },{ 659,866,994,1093,1205,1571,290,403,483, },{ 611,739,834,946,1056,277,394,490, },{ 611,690,834,1312,298,410, },{ 611,739,834,946,1314,282,426, },{ 611,690,834,1571,282,410, },{ 611,818,951,1040,282,410, },{ 616,744,839,951,1312,282,394, },{ 615,743,839,967,1559,282,410, },{ 616,744,839,967,1306,282,362,442, },{ 618,746,823,951,1040,282,362,442, },{ 616,744,823,951,1296,282,362,442, },{ 615,743,839,967,1559,282,362,458, },{ 538,618,698,839,935,999,1040,282,362,442, },{ 538,616,696,839,919,999,1296,282,362,442, },{ 536,615,695,823,903,999,1303,282,362,442, },{ 536,615,712,839,935,999,1306,282,362,442, },{ 538,618,698,839,919,999,1040,282,362,442, },{ 538,620,700,839,919,999,1296,282,362,458, },{ 540,618,698,839,919,999,1559,282,378,458, },{ 538,876,956,1084,1180,1260,1306,282,362,442, },{ 538,618,698,839,919,999,1040,282,362,442, },{ 538,616,712,839,935,999,1296,282,362,442, },{ 536,631,711,839,919,999,1559,282, },{ 536,615,696,839,919,999,1306, },{ 535,615,695,823,903,999,1040, },{ 533,613,693,823,919,999,1296, },{ 535,791,1040, } };
int totalBars = 239;

SSD1306Wire display(0x3c, SDA, SCL);   // ADDRESS, SDA, SCL  -  SDA and SCL usually populate automatically based on your board's pins_arduino.h

int demoMode = 0;
int counter = 1;

void setup() {
  Serial.begin(115200);
  pinMode(14, INPUT); // TEMPO UP
  pinMode(12, INPUT); // TEMPO DOWN


  // Initialising the UI will init the display too.
  display.init();

  display.flipScreenVertically();
  display.setFont(ArialMT_Plain_10);

}

void drawStrings(){
  // Draw a line horizontally
    display.drawHorizontalLine(0, 4, 128);
    display.drawHorizontalLine(0, 15, 128);
    display.drawHorizontalLine(0, 26, 128);
    display.drawHorizontalLine(0, 37, 128);
    display.drawHorizontalLine(0, 48, 128);
    display.drawHorizontalLine(0, 59, 128);
}
void drawNotes(){
    drawNote(1, 3, 0.5);
    drawNote(2, 2, 0.3);
    drawNote(3, 6, 0.2);
    drawNote(5, 4, 0.5);
}

// Draws a note given a specified string, fret and normalized horiz. position
void drawNote(int str, int fret, float nhpos){
    display.setColor(WHITE);
    display.fillCircle(nhpos*128, 4+str*11, 5);
    //setup text settings
    display.setColor(BLACK);
    display.setTextAlignment(TEXT_ALIGN_CENTER);
    display.setFont(Roboto_Mono_Light_8);
    display.drawString(nhpos*128, str*11, String(fret));
    display.setColor(WHITE);
}

void drawDiagnostics(){
    display.setTextAlignment(TEXT_ALIGN_LEFT);
    display.setFont(Roboto_Mono_Light_8);
    display.drawString(0, 56, "tabreader_v0.1 | 100BPM");
}

void drawCircleDemo() {
  for (int i=1; i < 8; i++) {
    display.setColor(WHITE);
    display.drawCircle(32, 32, i*3);
    if (i % 2 == 0) {
      display.setColor(BLACK);
    }
    display.fillCircle(96, 32, 32 - i* 3);
  }
}

int barCount = 0;
int baradvancedelayctr = 0;
int bps = 40; // 1 second between bar change
int showBpsTicks = 50;

void drawBar(){
  int currentBarInts[32] = {};
  drawStrings();
  //copy over arr
  for(int i=0;i<32;i++){
   currentBarInts[i] = song[barCount%totalBars][i];
   Serial.print(currentBarInts[i]);
  }
  for(int i=0;i<32;i++){
    int note = currentBarInts[i];
    if(note!=0){
      int stringNum = (unsigned(note)>> 8)-1; // 0 = e, 1 = B ... 5 = E
      int hpos = (unsigned(note) >> 4)&0b000000001111;
      float nhpos = hpos/16.0;
      int fretNum = note&0b000000001111;

      drawNote(stringNum, fretNum, nhpos);
    };
  }
  if(showBpsTicks > 0){
    display.drawString(108, 49, String(bps*25)+"ms");
    
    showBpsTicks--;
  }
  //draw indicators for first & last bars
  if(barCount%totalBars == 0){
    display.fillRect(0,0,3,64);  
  }
  else if (barCount%totalBars == (totalBars-1)){
    display.fillRect(125,0,6,64);  
  }

  
}


void loop() {
  // button processing:
  int upInput = digitalRead(14);
  int downInput = digitalRead(12);
  if(upInput) {
    bps+=1;
    showBpsTicks = 50;
  }
  if (downInput && bps > 1) {
    bps-=1;
    showBpsTicks = 50;

  }

  Serial.println(bps);

  
  // clear the display  
  display.clear();
  drawBar();
  //drawNotes();
  //drawDiagnostics();
  display.display();
  baradvancedelayctr++;
  if(baradvancedelayctr%bps==0) barCount++;
  delay(25);
}
